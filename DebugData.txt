Role: system
Prompt: You are a senior .net developer and expert at all things Visual Studio, C#, WPF, and .NET.  You will work with users to recieve the contents of one or more files to provide you with the necessary context for the user's project. If a file is too large to send in one message then it the message will be prefaced with a statement on the part. Example: part 1 of 3 Example: part 1 of 1. After each file, you will simply confirm that you recieved each file by replying 'Content of file recieved'. Once the user has completed sending you the contents of the relevant files, they will ask you to print the filenames of each file sent alongside a brief description of what each one does. After doing that, you will assist the user in any issues or modification they need..

-----------------------
Role: user
Prompt: File: PropertyNameConvertor.csContents:
using   System; using   System.Collections.Generic; using   System.Globalization; using   System.Linq; using   System.Text; using   System.Threading.Tasks; using   System.Windows.Data; namespace   Jon.WPF.UserControls.Controls.Converters { public   class   PropertyNameConverter : IValueConverter { public   object   Convert(object   value, Type   targetType, object   parameter, CultureInfo   culture) { var   propertyName = value   as   string; return   string.IsNullOrEmpty(propertyName) ? string.Empty : propertyName.Replace( '_' , ' ' ); } public   object   ConvertBack(object   value, Type   targetType, object   parameter, CultureInfo   culture) { throw   new   NotSupportedException(); } } }
-----------------------
Role: user
Prompt: File: PropertyEntry.csContents:
using   System; using   System.Collections.Generic; using   System.ComponentModel; using   System.Linq; using   System.Text; using   System.Threading.Tasks; namespace   Jon.WPF.UserControls.Controls.Models { public   class   PropertyEntry { public   PropertyDescriptor   PropertyDescriptor { get; } public   object   Instance { get; } public   bool   IsCategory { get; set; } public   string   Category { get; set; } public   string   Name { get; set; } public   string   Description { get { return   PropertyDescriptor != null ? PropertyDescriptor.Description : string.Empty; } } public   object   Value { get { return   PropertyDescriptor?.GetValue(Instance); } set { PropertyDescriptor?.SetValue(Instance, value); } } public   PropertyEntry() { } public   PropertyEntry(PropertyDescriptor   propertyDescriptor, object   instance, string   category = null) { PropertyDescriptor = propertyDescriptor; Instance = instance; Category = category; Name = propertyDescriptor.Name; } } }
-----------------------
Role: system
Prompt: You are a senior .net developer and expert at all things Visual Studio, C#, WPF, and .NET.  You will work with users to recieve the contents of one or more files to provide you with the necessary context for the user's project. If a file is too large to send in one message then it the message will be prefaced with a statement on the part. Example: part 1 of 3 Example: part 1 of 1. After each file, you will simply confirm that you recieved each file by replying 'Content of file recieved'. Once the user has completed sending you the contents of the relevant files, they will ask you to print the filenames of each file sent alongside a brief description of what each one does. After doing that, you will assist the user in any issues or modification they need..

-----------------------
Role: user
Prompt: File: PropertyNameConvertor.csContents:
using   System; using   System.Collections.Generic; using   System.Globalization; using   System.Linq; using   System.Text; using   System.Threading.Tasks; using   System.Windows.Data; namespace   Jon.WPF.UserControls.Controls.Converters { public   class   PropertyNameConverter : IValueConverter { public   object   Convert(object   value, Type   targetType, object   parameter, CultureInfo   culture) { var   propertyName = value   as   string; return   string.IsNullOrEmpty(propertyName) ? string.Empty : propertyName.Replace( '_' , ' ' ); } public   object   ConvertBack(object   value, Type   targetType, object   parameter, CultureInfo   culture) { throw   new   NotSupportedException(); } } }
-----------------------
Role: user
Prompt: File: PropertyEntry.csContents:
using   System; using   System.Collections.Generic; using   System.ComponentModel; using   System.Linq; using   System.Text; using   System.Threading.Tasks; namespace   Jon.WPF.UserControls.Controls.Models { public   class   PropertyEntry { public   PropertyDescriptor   PropertyDescriptor { get; } public   object   Instance { get; } public   bool   IsCategory { get; set; } public   string   Category { get; set; } public   string   Name { get; set; } public   string   Description { get { return   PropertyDescriptor != null ? PropertyDescriptor.Description : string.Empty; } } public   object   Value { get { return   PropertyDescriptor?.GetValue(Instance); } set { PropertyDescriptor?.SetValue(Instance, value); } } public   PropertyEntry() { } public   PropertyEntry(PropertyDescriptor   propertyDescriptor, object   instance, string   category = null) { PropertyDescriptor = propertyDescriptor; Instance = instance; Category = category; Name = propertyDescriptor.Name; } } }
-----------------------
Role: user
Prompt: File: DataTemplateSelector.csContents:
using   Jon.WPF.UserControls.Controls.Models; using   System; using   System.Windows; using   System.Windows.Controls; namespace   Jon.WPF.UserControls.Controls.Selectors { public   class   PropertyGridValueTemplateSelector : DataTemplateSelector { public   DataTemplate   DefaultTemplate { get; set; } public   DataTemplate   DateTimeTemplate { get; set; } public   override   DataTemplate   SelectTemplate(object   item, DependencyObject   container) { var   propertyEntry = item   as   PropertyEntry; if (propertyEntry != null) { if (propertyEntry.PropertyDescriptor.PropertyType == typeof(DateTime)) { return   DateTimeTemplate; } } return   DefaultTemplate; } } }
-----------------------
Role: user
Prompt: File: PropertyGridControlViewModel.csContents:
using   Jon.WPF.UserControls.Controls.Models; using   System.Collections.ObjectModel; using   System.ComponentModel; namespace   Jon.WPF.UserControls.ViewModels { public   class   PropertyGridControlViewModel : INotifyPropertyChanged { public   ObservableCollection<PropertyEntry> PropertyEntries { get { return   _propertyEntries; } set { _propertyEntries = value; OnPropertyChanged(nameof(PropertyEntries)); } } public   PropertyGridControlViewModel() { PropertyEntries = new   ObservableCollection<PropertyEntry> { }; } private   ObservableCollection<PropertyEntry> _propertyEntries; public   event   PropertyChangedEventHandler   PropertyChanged; protected   void   OnPropertyChanged(string   propertyName) { PropertyChanged?.Invoke(this, new   PropertyChangedEventArgs(propertyName)); } } }
-----------------------
Role: user
Prompt: File: Colors.xamlContents:
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="DefaultCategoryColor" Color="#4E94DB" />
    <SolidColorBrush x:Key="DefaultCategoryForeground" Color="White" />
    <SolidColorBrush x:Key="GrayBorderColor" Color="#FFD2D2D2" />
    <SolidColorBrush x:Key="LightGrayBackgroundColor" Color="#FFF8F8F8" />
    <SolidColorBrush x:Key="CategoryColor" Color="#6E9F00" />
    <SolidColorBrush x:Key="CategoryForeground" Color="White" />
    <SolidColorBrush x:Key="RowAlternatingBackground" Color="#F7F7F7" />
    <SolidColorBrush x:Key="BorderBackgroundPropertyValueField" Color="LightGray" />

</ResourceDictionary>
-----------------------
Role: user
Prompt: File: CustomDataGridStyle.xamlContents:
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views">

    <Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type local:CustomDataGrid}">
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AreRowDetailsFrozen" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="RowBackground" Value="{StaticResource LightGrayBackgroundColor}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource RowAlternatingBackground}" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GrayBorderColor}" />
    </Style>
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
</ResourceDictionary>
-----------------------
Role: user
Prompt: File: PropertyGridControlStyles.xamlContents:
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:Jon.WPF.UserControls.Controls.Converters"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    xmlns:selector="clr-namespace:Jon.WPF.UserControls.Controls.Selectors">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type local:CustomDataGrid}">
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AreRowDetailsFrozen" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
    </Style>

    <Style Target
-----------------------
Role: user
Prompt: File: CustomDataGrid.csContents:
using   System.Windows; using   System.Windows.Controls; using   System.Windows.Media; namespace   Jon.WPF.UserControls.Controls.Views { public   class   CustomDataGrid : DataGrid { static   CustomDataGrid() { DefaultStyleKeyProperty.OverrideMetadata(typeof(CustomDataGrid), new   FrameworkPropertyMetadata(typeof(CustomDataGrid))); } public   Brush   CategoryColor { get { return (Brush)GetValue(CategoryColorProperty); } set { SetValue(CategoryColorProperty, value); } } public   static   readonly   DependencyProperty   CategoryColorProperty = DependencyProperty.Register(nameof(CategoryColor), typeof(Brush), typeof(CustomDataGrid), new   PropertyMetadata(new   SolidColorBrush(Color.FromArgb(0xFF, 0x4E, 0x94, 0xDB)))); public   Brush   CategoryForeground { get { return (Brush)GetValue(CategoryForegroundProperty); } set { SetValue(CategoryForegroundProperty, value); } } public   static   readonly   DependencyProperty   CategoryForegroundProperty = DependencyProperty.Register(nameof(CategoryForeground), typeof(Brush), typeof(CustomDataGrid), new   PropertyMetadata(new   SolidColorBrush(Colors.White))); } }
-----------------------
Role: user
Prompt: File: PropertyGrid.xamlContents:
<UserControl
    x:Class="Jon.WPF.UserControls.Controls.Views.PropertyGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    MinWidth="300"
    ScrollViewer.HorizontalScrollBarVisibility="Hidden">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/PropertyGridControlStyles.xaml" />
                <ResourceDictionary Source="/Jon.WPF.Us
-----------------------
Role: user
Prompt: File: PropertyGridControl.xamlContents:
<UserControl
    x:Class="Jon.WPF.UserControls.Controls.Views.PropertyGridControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/PropertyGridControlStyles.xaml" />
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </Re
-----------------------
Role: user
Prompt: File: PropertyGridControl.xamlContents:
sourceDictionary>

    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">

            <ToggleButton
                x:Name="CategorizedToggle"
                Margin="0,5,0,5"
                VerticalAlignment="Center"
                Click="CategorizedToggle_Click"
                IsChecked="{Binding CategorizedView, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <TextBlock
                    x:Name="TextBlockCategorized"
                    Margin="5,0,5,0"
                    VerticalAlignment="Center"
                    FontFamily="Segoe UI"
                    FontSize="11"
                    Text="Categorized:" />
            </ToggleButton>
        </StackPanel>
        <local:CustomDataGrid
            x:Name="propertyDataGrid"
            Grid.Row="1"
            AlternationCount="2"
            AutoGenerateColumns="False"
            Background="{Binding CategoryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PropertyGridControl}}}"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            CanUserSortColumns="False"
            CategoryColor="{Binding CategoryColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PropertyGridControl}}}"
            CategoryForeground="{Binding CategoryForeground, Rela
-----------------------
Role: user
Prompt: I sent you the contents of several code files, can you please list the classes and describe them briefly?

-----------------------
Role: system
Prompt: You are a senior .net developer and expert at all things Visual Studio, C#, WPF, and .NET.  You will work with users to recieve the contents of one or more files to provide you with the necessary context for the user's project. If a file is too large to send in one message then it the message will be prefaced with a statement on the part. Example: part 1 of 3 Example: part 1 of 1. After each file, you will simply confirm that you recieved each file by replying 'Content of file recieved'. Once the user has completed sending you the contents of the relevant files, they will ask you to print the filenames of each file sent alongside a brief description of what each one does. After doing that, you will assist the user in any issues or modification they need..

-----------------------
Role: user
Prompt: File: PropertyNameConvertor.csContents:
using   System; using   System.Collections.Generic; using   System.Globalization; using   System.Linq; using   System.Text; using   System.Threading.Tasks; using   System.Windows.Data; namespace   Jon.WPF.UserControls.Controls.Converters { public   class   PropertyNameConverter : IValueConverter { public   object   Convert(object   value, Type   targetType, object   parameter, CultureInfo   culture) { var   propertyName = value   as   string; return   string.IsNullOrEmpty(propertyName) ? string.Empty : propertyName.Replace( '_' , ' ' ); } public   object   ConvertBack(object   value, Type   targetType, object   parameter, CultureInfo   culture) { throw   new   NotSupportedException(); } } }
-----------------------
Role: user
Prompt: File: PropertyEntry.csContents:
using   System; using   System.Collections.Generic; using   System.ComponentModel; using   System.Linq; using   System.Text; using   System.Threading.Tasks; namespace   Jon.WPF.UserControls.Controls.Models { public   class   PropertyEntry { public   PropertyDescriptor   PropertyDescriptor { get; } public   object   Instance { get; } public   bool   IsCategory { get; set; } public   string   Category { get; set; } public   string   Name { get; set; } public   string   Description { get { return   PropertyDescriptor != null ? PropertyDescriptor.Description : string.Empty; } } public   object   Value { get { return   PropertyDescriptor?.GetValue(Instance); } set { PropertyDescriptor?.SetValue(Instance, value); } } public   PropertyEntry() { } public   PropertyEntry(PropertyDescriptor   propertyDescriptor, object   instance, string   category = null) { PropertyDescriptor = propertyDescriptor; Instance = instance; Category = category; Name = propertyDescriptor.Name; } } }
-----------------------
Role: user
Prompt: File: DataTemplateSelector.csContents:
using   Jon.WPF.UserControls.Controls.Models; using   System; using   System.Windows; using   System.Windows.Controls; namespace   Jon.WPF.UserControls.Controls.Selectors { public   class   PropertyGridValueTemplateSelector : DataTemplateSelector { public   DataTemplate   DefaultTemplate { get; set; } public   DataTemplate   DateTimeTemplate { get; set; } public   override   DataTemplate   SelectTemplate(object   item, DependencyObject   container) { var   propertyEntry = item   as   PropertyEntry; if (propertyEntry != null) { if (propertyEntry.PropertyDescriptor.PropertyType == typeof(DateTime)) { return   DateTimeTemplate; } } return   DefaultTemplate; } } }
-----------------------
Role: user
Prompt: File: PropertyGridControlViewModel.csContents:
using   Jon.WPF.UserControls.Controls.Models; using   System.Collections.ObjectModel; using   System.ComponentModel; namespace   Jon.WPF.UserControls.ViewModels { public   class   PropertyGridControlViewModel : INotifyPropertyChanged { public   ObservableCollection<PropertyEntry> PropertyEntries { get { return   _propertyEntries; } set { _propertyEntries = value; OnPropertyChanged(nameof(PropertyEntries)); } } public   PropertyGridControlViewModel() { PropertyEntries = new   ObservableCollection<PropertyEntry> { }; } private   ObservableCollection<PropertyEntry> _propertyEntries; public   event   PropertyChangedEventHandler   PropertyChanged; protected   void   OnPropertyChanged(string   propertyName) { PropertyChanged?.Invoke(this, new   PropertyChangedEventArgs(propertyName)); } } }
-----------------------
Role: user
Prompt: File: Colors.xamlContents:
<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <SolidColorBrush x:Key="DefaultCategoryColor" Color="#4E94DB" />
    <SolidColorBrush x:Key="DefaultCategoryForeground" Color="White" />
    <SolidColorBrush x:Key="GrayBorderColor" Color="#FFD2D2D2" />
    <SolidColorBrush x:Key="LightGrayBackgroundColor" Color="#FFF8F8F8" />
    <SolidColorBrush x:Key="CategoryColor" Color="#6E9F00" />
    <SolidColorBrush x:Key="CategoryForeground" Color="White" />
    <SolidColorBrush x:Key="RowAlternatingBackground" Color="#F7F7F7" />
    <SolidColorBrush x:Key="BorderBackgroundPropertyValueField" Color="LightGray" />

</ResourceDictionary>
-----------------------
Role: user
Prompt: File: CustomDataGridStyle.xamlContents:
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views">

    <Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type local:CustomDataGrid}">
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AreRowDetailsFrozen" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
        <Setter Property="RowBackground" Value="{StaticResource LightGrayBackgroundColor}" />
        <Setter Property="AlternatingRowBackground" Value="{StaticResource RowAlternatingBackground}" />
        <Setter Property="GridLinesVisibility" Value="Horizontal" />
        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource GrayBorderColor}" />
    </Style>
    <Style TargetType="{x:Type DataGridRowHeader}">
        <Setter Property="Visibility" Value="Collapsed" />
    </Style>
</ResourceDictionary>
-----------------------
Role: user
Prompt: File: PropertyGridControlStyles.xamlContents:
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:convert="clr-namespace:Jon.WPF.UserControls.Controls.Converters"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    xmlns:selector="clr-namespace:Jon.WPF.UserControls.Controls.Selectors">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/Colors.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <Style BasedOn="{StaticResource {x:Type DataGrid}}" TargetType="{x:Type local:CustomDataGrid}">
        <Setter Property="HeadersVisibility" Value="Column" />
        <Setter Property="AreRowDetailsFrozen" Value="True" />
        <Setter Property="CanUserAddRows" Value="False" />
    </Style>

    <Style Target
-----------------------
Role: user
Prompt: File: CustomDataGrid.csContents:
using   System.Windows; using   System.Windows.Controls; using   System.Windows.Media; namespace   Jon.WPF.UserControls.Controls.Views { public   class   CustomDataGrid : DataGrid { static   CustomDataGrid() { DefaultStyleKeyProperty.OverrideMetadata(typeof(CustomDataGrid), new   FrameworkPropertyMetadata(typeof(CustomDataGrid))); } public   Brush   CategoryColor { get { return (Brush)GetValue(CategoryColorProperty); } set { SetValue(CategoryColorProperty, value); } } public   static   readonly   DependencyProperty   CategoryColorProperty = DependencyProperty.Register(nameof(CategoryColor), typeof(Brush), typeof(CustomDataGrid), new   PropertyMetadata(new   SolidColorBrush(Color.FromArgb(0xFF, 0x4E, 0x94, 0xDB)))); public   Brush   CategoryForeground { get { return (Brush)GetValue(CategoryForegroundProperty); } set { SetValue(CategoryForegroundProperty, value); } } public   static   readonly   DependencyProperty   CategoryForegroundProperty = DependencyProperty.Register(nameof(CategoryForeground), typeof(Brush), typeof(CustomDataGrid), new   PropertyMetadata(new   SolidColorBrush(Colors.White))); } }
-----------------------
Role: user
Prompt: File: PropertyGrid.xamlContents:
<UserControl
    x:Class="Jon.WPF.UserControls.Controls.Views.PropertyGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    MinWidth="300"
    ScrollViewer.HorizontalScrollBarVisibility="Hidden">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/PropertyGridControlStyles.xaml" />
                <ResourceDictionary Source="/Jon.WPF.Us
-----------------------
Role: user
Prompt: File: PropertyGridControl.xamlContents:
<UserControl
    x:Class="Jon.WPF.UserControls.Controls.Views.PropertyGridControl"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">



    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/PropertyGridControlStyles.xaml" />
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/Colors.xaml" />
            </ResourceDictionary.MergedDictionaries>

        </Re
-----------------------
Role: user
Prompt: File: PropertyGridControl.xamlContents:
sourceDictionary>

    </UserControl.Resources>


    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Orientation="Horizontal">

            <ToggleButton
                x:Name="CategorizedToggle"
                Margin="0,5,0,5"
                VerticalAlignment="Center"
                Click="CategorizedToggle_Click"
                IsChecked="{Binding CategorizedView, Mode=TwoWay, RelativeSource={RelativeSource AncestorType=UserControl}}">
                <TextBlock
                    x:Name="TextBlockCategorized"
                    Margin="5,0,5,0"
                    VerticalAlignment="Center"
                    FontFamily="Segoe UI"
                    FontSize="11"
                    Text="Categorized:" />
            </ToggleButton>
        </StackPanel>
        <local:CustomDataGrid
            x:Name="propertyDataGrid"
            Grid.Row="1"
            AlternationCount="2"
            AutoGenerateColumns="False"
            Background="{Binding CategoryBackground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PropertyGridControl}}}"
            CanUserAddRows="False"
            CanUserDeleteRows="False"
            CanUserReorderColumns="False"
            CanUserResizeColumns="True"
            CanUserResizeRows="False"
            CanUserSortColumns="False"
            CategoryColor="{Binding CategoryColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type local:PropertyGridControl}}}"
            CategoryForeground="{Binding CategoryForeground, Rela
-----------------------
Role: user
Prompt: I sent you the contents of several code files, can you please list the classes and describe them briefly?

-----------------------
Role: system
Prompt: You are a senior .net developer and expert at all things Visual Studio, C#, WPF, and .NET.  You will work with users to recieve the contents of one or more files to provide you with the necessary context for the user's project. If a file is too large to send in one message then it the message will be prefaced with a statement on the part. Example: part 1 of 3 Example: part 1 of 1. After each file, you will simply confirm that you recieved each file by replying 'Content of file recieved'. Once the user has completed sending you the contents of the relevant files, they will ask you to print the filenames of each file sent alongside a brief description of what each one does. After doing that, you will assist the user in any issues or modification they need..

-----------------------
Role: system
Prompt: You are a senior .net developer and expert at all things Visual Studio, C#, WPF, and .NET.  You will work with users to recieve the contents of one or more files to provide you with the necessary context for the user's project. If a file is too large to send in one message then it the message will be prefaced with a statement on the part. Example: part 1 of 3 Example: part 1 of 1. After each file, you will simply confirm that you recieved each file by replying 'Content of file recieved'. Once the user has completed sending you the contents of the relevant files, they will ask you to print the filenames of each file sent alongside a brief description of what each one does. After doing that, you will assist the user in any issues or modification they need..

-----------------------
Role: user
Prompt: File: PropertyGrid.xamlContents:
<UserControl
    x:Class="Jon.WPF.UserControls.Controls.Views.PropertyGrid"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="clr-namespace:Jon.WPF.UserControls.Controls.Views"
    MinWidth="300"
    ScrollViewer.HorizontalScro
-----------------------
Role: user
Prompt: File: PropertyGrid.xamlContents:
llBarVisibility="Hidden">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/PropertyGridControlStyles.xaml" />
                <ResourceDictionary Source="/Jon.WPF.UserControls;component/Controls/Views/Styles/Colors.xaml" />


            </ResourceDictionary.MergedDictionaries>
            <SolidColorBrush x:Key="DefaultHeaderBackground" Color="#F1F1F1" />
            <SolidColorBrush x:Key="DefaultHeaderBorderBrush" Color="#8C8C8C" />
        </ResourceDictionary>

    </UserCont
-----------------------
Role: user
Prompt: I sent you the contents of several code files, can you please list the classes and describe them briefly?

-----------------------
